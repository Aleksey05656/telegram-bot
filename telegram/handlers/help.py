# telegram/handlers/help.py
"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help –∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ (/examples, /stats)."""
import textwrap

from aiogram import F, Router
from aiogram.exceptions import TelegramBadRequest  # –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç
from aiogram.filters import Command
from aiogram.types import CallbackQuery, Message
from aiogram.utils.keyboard import InlineKeyboardBuilder

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç –∫—ç—à–∞
from logger import logger
from telegram.models import CommandWithoutArgs

router = Router()


@router.message(Command("help"))
@router.message(Command("examples"))
@router.message(Command("stats"))
async def cmd_help(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ /help, /examples, /stats."""
    try:
        CommandWithoutArgs.parse(message.text)
        command = message.get_command(pure=True).lstrip("/")
        logger.debug(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª {command}")

        if command == "help":
            help_text = textwrap.dedent(
                """
                ‚ÑπÔ∏è <b>–°–ø—Ä–∞–≤–∫–∞ Football Predictor Bot</b>

                –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
                ‚Ä¢ /start - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º
                ‚Ä¢ /predict <code>–ö–æ–º–∞–Ω–¥–∞1 - –ö–æ–º–∞–Ω–¥–∞2</code> - –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑
                ‚Ä¢ /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
                ‚Ä¢ /examples - –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                ‚Ä¢ /stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞
                ‚Ä¢ /terms - –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                ‚Ä¢ /disclaimer - –û—Ç–∫–∞–∑ –æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏

                –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
            """
            ).strip()
        elif command == "examples":
            help_text = textwrap.dedent(
                """
                üìö <b>–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Football Predictor Bot</b>

                1. –ü—Ä–æ–≥–Ω–æ–∑ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–∞—Ç—á–∞:
                <code>/predict –ë–∞–≤–∞—Ä–∏—è - –ë–æ—Ä—É—Å—Å–∏—è –î</code>

                2. –ü—Ä–æ–≥–Ω–æ–∑ –¥–ª—è –º–∞—Ç—á–∞ –õ–∏–≥–∏ –ß–µ–º–ø–∏–æ–Ω–æ–≤:
                <code>/predict –†–µ–∞–ª –ú–∞–¥—Ä–∏–¥ - –ú–∞–Ω—á–µ—Å—Ç–µ—Ä –°–∏—Ç–∏</code>

                3. –ü—Ä–æ–≥–Ω–æ–∑ –¥–ª—è –º–∞—Ç—á–µ–π –ê–ü–õ:
                <code>/predict –õ–∏–≤–µ—Ä–ø—É–ª—å - –ß–µ–ª—Å–∏</code>

                –ë–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –∏—Å—Ö–æ–¥–æ–≤, —Ç–æ—Ç–∞–ª–æ–≤, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ —Ç.–¥.
            """
            ).strip()
        elif command == "stats":
            # TODO: –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            help_text = textwrap.dedent(
                """
                üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Football Predictor Bot</b>

                –í–µ—Ä—Å–∏—è: 1.0.0
                –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤: 0
                –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: 1
                –¢–æ—á–Ω–æ—Å—Ç—å –ø—Ä–æ–≥–Ω–æ–∑–æ–≤: N/A

                <i>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –ø–æ –º–µ—Ä–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞.</i>
            """
            ).strip()
        else:
            help_text = "‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏."

        await message.answer(help_text, parse_mode="HTML")
        logger.info(
            f"{command.capitalize()} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω(-–∞) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}"
        )
    except ValueError as e:
        await message.answer(f"‚ùå {e}", parse_mode="HTML")
    except Exception as e:
        error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ {command} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}"
        logger.error(f"{error_msg}: {e}", exc_info=True)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–ø—Ä–æ—â–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        await message.answer(
            f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ {command}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            parse_mode="HTML",
        )


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ Callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –º–µ–Ω—é (–µ—Å–ª–∏ –æ–Ω–∏ –≤—ã–∑—ã–≤–∞—é—Ç—Å—è –Ω–µ –∏–∑ start.py) ---
# –≠—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –¥—É–±–ª–∏—Ä—É—é—Ç –ª–æ–≥–∏–∫—É –∏–∑ start.py –∏ —Ç–∞–∫–∂–µ –æ–±–µ—Ä–Ω—É—Ç—ã –≤ try...except.
# –í –∏–¥–µ–∞–ª–µ, —ç—Ç—É –ª–æ–≥–∏–∫—É –ª—É—á—à–µ –≤—ã–Ω–µ—Å—Ç–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –º–æ–¥—É–ª—å —É—Ç–∏–ª–∏—Ç.


@router.callback_query(F.data == "show_help")
async def cb_show_help(callback: CallbackQuery):
    """Callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏."""
    try:
        logger.debug(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–ø—Ä–∞–≤–∫—É —á–µ—Ä–µ–∑ callback"
        )
        help_text = textwrap.dedent(
            """
            ‚ÑπÔ∏è <b>–°–ø—Ä–∞–≤–∫–∞ Football Predictor Bot</b>

            –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
            ‚Ä¢ /start - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º
            ‚Ä¢ /predict <code>–ö–æ–º–∞–Ω–¥–∞1 - –ö–æ–º–∞–Ω–¥–∞2</code> - –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑
            ‚Ä¢ /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
            ‚Ä¢ /examples - –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            ‚Ä¢ /stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞
            ‚Ä¢ /terms - –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            ‚Ä¢ /disclaimer - –û—Ç–∫–∞–∑ –æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏

            –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
        """
        ).strip()
        builder = InlineKeyboardBuilder()
        builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")
        builder.adjust(1)
        try:
            await callback.message.edit_text(
                help_text, reply_markup=builder.as_markup(), parse_mode="HTML"
            )
        except TelegramBadRequest as e:
            logger.debug(
                f"–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è /help (callback) —É {callback.from_user.id}: {e}. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ."
            )
            await callback.message.answer(
                help_text, reply_markup=builder.as_markup(), parse_mode="HTML"
            )
        await callback.answer()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ —Å–ø—Ä–∞–≤–∫–∏: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", show_alert=True)


@router.callback_query(F.data == "show_examples")
async def cb_show_examples(callback: CallbackQuery):
    """Callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤."""
    try:
        logger.debug(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª –ø—Ä–∏–º–µ—Ä—ã —á–µ—Ä–µ–∑ callback"
        )
        examples_text = textwrap.dedent(
            """
            üìö <b>–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Football Predictor Bot</b>

            1. –ü—Ä–æ–≥–Ω–æ–∑ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–∞—Ç—á–∞:
            <code>/predict –ë–∞–≤–∞—Ä–∏—è - –ë–æ—Ä—É—Å—Å–∏—è –î</code>

            2. –ü—Ä–æ–≥–Ω–æ–∑ –¥–ª—è –º–∞—Ç—á–∞ –õ–∏–≥–∏ –ß–µ–º–ø–∏–æ–Ω–æ–≤:
            <code>/predict –†–µ–∞–ª –ú–∞–¥—Ä–∏–¥ - –ú–∞–Ω—á–µ—Å—Ç–µ—Ä –°–∏—Ç–∏</code>

            3. –ü—Ä–æ–≥–Ω–æ–∑ –¥–ª—è –º–∞—Ç—á–µ–π –ê–ü–õ:
            <code>/predict –õ–∏–≤–µ—Ä–ø—É–ª—å - –ß–µ–ª—Å–∏</code>

            –ë–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –∏—Å—Ö–æ–¥–æ–≤, —Ç–æ—Ç–∞–ª–æ–≤, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ —Ç.–¥.
        """
        ).strip()
        builder = InlineKeyboardBuilder()
        builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")
        builder.adjust(1)
        try:
            await callback.message.edit_text(
                examples_text, reply_markup=builder.as_markup(), parse_mode="HTML"
            )
        except TelegramBadRequest as e:
            logger.debug(
                f"–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è /examples (callback) —É {callback.from_user.id}: {e}. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ."
            )
            await callback.message.answer(
                examples_text, reply_markup=builder.as_markup(), parse_mode="HTML"
            )
        await callback.answer()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –ø—Ä–∏–º–µ—Ä–æ–≤: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", show_alert=True)


@router.callback_query(F.data == "show_stats")
async def cb_show_stats(callback: CallbackQuery):
    """Callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."""
    try:
        logger.debug(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–µ—Ä–µ–∑ callback"
        )
        # TODO: –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats_text = textwrap.dedent(
            """
            üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Football Predictor Bot</b>

            –í–µ—Ä—Å–∏—è: 1.0.0
            –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤: 0
            –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: 1
            –¢–æ—á–Ω–æ—Å—Ç—å –ø—Ä–æ–≥–Ω–æ–∑–æ–≤: N/A

            <i>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –ø–æ –º–µ—Ä–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞.</i>
        """
        ).strip()
        builder = InlineKeyboardBuilder()
        builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")
        builder.adjust(1)
        try:
            await callback.message.edit_text(
                stats_text, reply_markup=builder.as_markup(), parse_mode="HTML"
            )
        except TelegramBadRequest as e:
            logger.debug(
                f"–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è /stats (callback) —É {callback.from_user.id}: {e}. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ."
            )
            await callback.message.answer(
                stats_text, reply_markup=builder.as_markup(), parse_mode="HTML"
            )
        await callback.answer()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        await callback.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", show_alert=True)


# –≠–∫—Å–ø–æ—Ä—Ç —Ä–æ—É—Ç–µ—Ä–∞
__all__ = ["router"]
